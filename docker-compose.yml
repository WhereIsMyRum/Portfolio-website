version: '3'

services:
    nginx:
        image: nginx:latest
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./nginx/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf
            - ./nginx/clear-cache.sh:/usr/src/scripts/clear-cache.sh
        restart: always
        depends_on:
            - frontend
            - backend

    redis:
        image: redis:latest
        container_name: cache
        command: ["redis-server", "--appendonly", "yes"]
        restart: always


    frontend:
        build: ./frontend
        command: "npm run dev"
        volumes: 
            - ./frontend/app/:/usr/src/app/
        restart: always
        depends_on: 
            - backend
        environment: 
            - ROOT_URL=http://frontend.docker

    backend:
        build: ./backend
        command: bash -c "npm install && npm run dev"
        volumes:
            - ./backend/app/:/usr/src/
            - ./backend/.aws/:/root/.aws/
        restart: always
        depends_on:
            - redis
            - mongo
        environment: 
            - REDIS_URL=redis://cache
            - ROOT_URL=http://frontend.docker

    mongo:
        image: mongo:latest
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
            MONGO_INITDB_DATABASE: page
        volumes:
            - mongo-db:/data/db

    mongo-express:
        image: mongo-express:latest
        restart: always
        ports:
          - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example

volumes:
    mongo-db:
